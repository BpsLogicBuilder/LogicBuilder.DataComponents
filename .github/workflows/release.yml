name: Release

on:
  release:
    types: [published]

permissions:
    contents: read
    packages: write

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.x
        source-url: https://nuget.pkg.github.com/bpslogicbuilder/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #- name: Add Telerik Nuget source
    #  run: dotnet nuget add source https://nuget.telerik.com/nuget -n telerik -u ${{ secrets.TELERIK_USERNAME }} -p ${{ secrets.TELERIK_PASSWORD }}

    - name: Set Variables
      run: |
        echo "GITHUB_NUGET_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "NUGET_URL=https://api.nuget.org/v3/index.json" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "NUGET_API_KEY=${{ secrets.NUGET_API_KEY }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "REPO=${{ github.repository }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        echo "REPO_OWNER=${{ github.repository_owner }}" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Build and push LogicBuilder.Data
      env:
        PROJECT_NAME: LogicBuilder.Data
      run: ./Release_Build_Push.ps1
      shell: pwsh

    - name: Build and push LogicBuilder.Domain
      env:
        PROJECT_NAME: LogicBuilder.Domain
      run: ./Release_Build_Push.ps1
      shell: pwsh

    - name: Build and push LogicBuilder.Structures
      env:
        PROJECT_NAME: LogicBuilder.Structures
      run: ./Release_Build_Push.ps1
      shell: pwsh

    - name: Build and push LogicBuilder.Expressions.Utils
      env:
        PROJECT_NAME: LogicBuilder.Expressions.Utils
      run: ./Release_Build_Push.ps1
      shell: pwsh

    #- name: Pack and push LogicBuilder.Kendo.ExpressionExtensions
    #  env:
    #    PROJECT_NAME: LogicBuilder.Kendo.ExpressionExtensions
    #  run: ./Release_Build_Push.ps1
    #  shell: pwsh

    - name: Pack and push LogicBuilder.Expressions.EntityFrameworkCore
      env:
        PROJECT_NAME: LogicBuilder.Expressions.EntityFrameworkCore
      run: ./Release_Build_Push.ps1
      shell: pwsh

    - name: Pack and push LogicBuilder.EntityFrameworkCore.SqlServer
      env:
        PROJECT_NAME: LogicBuilder.EntityFrameworkCore.SqlServer
      run: ./Release_Build_Push.ps1
      shell: pwsh

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal --filter "LogicBuilder.EntityFrameworkCore.SqlServer.Tests.FilterDescriptorTests|LogicBuilder.EntityFrameworkCore.SqlServer.Tests.QueryableExpressionTests|LogicBuilder.Expressions.Utils.Tests.BuildExpansionsTests|LogicBuilder.Expressions.Utils.Tests.FilterTests|LogicBuilder.Expressions.Utils.Tests.QueryableExpressionTests"

